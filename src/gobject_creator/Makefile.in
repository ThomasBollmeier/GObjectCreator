# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = src/gobject_creator
DIST_COMMON = $(codegen_PYTHON) $(csharpgen_PYTHON) \
	$(gobjectgen_PYTHON) $(goc_PYTHON) $(io_PYTHON) $(meta_PYTHON) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/create_config_module.sh.in $(valagen_PYTHON)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = create_config_module.sh
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(codegendir)" \
	"$(DESTDIR)$(csharpgendir)" "$(DESTDIR)$(gobjectgendir)" \
	"$(DESTDIR)$(gocdir)" "$(DESTDIR)$(iodir)" \
	"$(DESTDIR)$(metadir)" "$(DESTDIR)$(valagendir)"
py_compile = $(top_srcdir)/py-compile
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GOC_RPM_BUILD = @GOC_RPM_BUILD@
GOC_RPM_INSTALL = @GOC_RPM_INSTALL@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
gocdir = $(pkgpythondir)
goc_PYTHON = \
__init__.py

codegendir = $(gocdir)/code_generation
codegen_PYTHON = \
code_generation/bool_parser.py \
code_generation/generation_inout.py \
code_generation/parser.py \
code_generation/__init__.py \
code_generation/components.py \
code_generation/scope.py \
code_generation/translator.py \
code_generation/usercode.py

valagendir = $(codegendir)/vala
valagen_PYTHON = \
code_generation/vala/__init__.py \
code_generation/vala/generator_vala.py

csharpgendir = $(codegendir)/csharp
csharpgen_PYTHON = \
code_generation/csharp/__init__.py \
code_generation/csharp/generator_csharp.py

gobjectgendir = $(codegendir)/gobject
gobjectgen_PYTHON = \
code_generation/gobject/gobject_marshaller_generator.py \
code_generation/gobject/__init__.py \
code_generation/gobject/gobject_introspection_support.py \
code_generation/gobject/generator_gobject.py

metadir = $(gocdir)/metamodel
meta_PYTHON = \
metamodel/visitor.py \
metamodel/meta_objects.py \
metamodel/__init__.py \
metamodel/introspection_info.py \
metamodel/introspection_decorators.py \
metamodel/object_catalog.py

iodir = $(gocdir)/io
io_PYTHON = \
io/__init__.py \
io/py_input.py \
io/include_handling.py

all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/gobject_creator/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/gobject_creator/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
create_config_module.sh: $(top_builddir)/config.status $(srcdir)/create_config_module.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-codegenPYTHON: $(codegen_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(codegendir)" || $(MKDIR_P) "$(DESTDIR)$(codegendir)"
	@list='$(codegen_PYTHON)'; dlist=; list2=; test -n "$(codegendir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(codegendir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(codegendir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(codegendir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(codegendir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-codegenPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(codegen_PYTHON)'; test -n "$(codegendir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	echo " ( cd '$(DESTDIR)$(codegendir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(codegendir)" && rm -f $$files || exit $$?; \
	echo " ( cd '$(DESTDIR)$(codegendir)' && rm -f" $$filesc ")"; \
	cd "$(DESTDIR)$(codegendir)" && rm -f $$filesc || exit $$?; \
	echo " ( cd '$(DESTDIR)$(codegendir)' && rm -f" $$fileso ")"; \
	cd "$(DESTDIR)$(codegendir)" && rm -f $$fileso
install-csharpgenPYTHON: $(csharpgen_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(csharpgendir)" || $(MKDIR_P) "$(DESTDIR)$(csharpgendir)"
	@list='$(csharpgen_PYTHON)'; dlist=; list2=; test -n "$(csharpgendir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(csharpgendir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(csharpgendir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(csharpgendir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(csharpgendir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-csharpgenPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(csharpgen_PYTHON)'; test -n "$(csharpgendir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	echo " ( cd '$(DESTDIR)$(csharpgendir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(csharpgendir)" && rm -f $$files || exit $$?; \
	echo " ( cd '$(DESTDIR)$(csharpgendir)' && rm -f" $$filesc ")"; \
	cd "$(DESTDIR)$(csharpgendir)" && rm -f $$filesc || exit $$?; \
	echo " ( cd '$(DESTDIR)$(csharpgendir)' && rm -f" $$fileso ")"; \
	cd "$(DESTDIR)$(csharpgendir)" && rm -f $$fileso
install-gobjectgenPYTHON: $(gobjectgen_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(gobjectgendir)" || $(MKDIR_P) "$(DESTDIR)$(gobjectgendir)"
	@list='$(gobjectgen_PYTHON)'; dlist=; list2=; test -n "$(gobjectgendir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gobjectgendir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gobjectgendir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(gobjectgendir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(gobjectgendir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-gobjectgenPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(gobjectgen_PYTHON)'; test -n "$(gobjectgendir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	echo " ( cd '$(DESTDIR)$(gobjectgendir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gobjectgendir)" && rm -f $$files || exit $$?; \
	echo " ( cd '$(DESTDIR)$(gobjectgendir)' && rm -f" $$filesc ")"; \
	cd "$(DESTDIR)$(gobjectgendir)" && rm -f $$filesc || exit $$?; \
	echo " ( cd '$(DESTDIR)$(gobjectgendir)' && rm -f" $$fileso ")"; \
	cd "$(DESTDIR)$(gobjectgendir)" && rm -f $$fileso
install-gocPYTHON: $(goc_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(gocdir)" || $(MKDIR_P) "$(DESTDIR)$(gocdir)"
	@list='$(goc_PYTHON)'; dlist=; list2=; test -n "$(gocdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gocdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gocdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(gocdir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(gocdir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-gocPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(goc_PYTHON)'; test -n "$(gocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	echo " ( cd '$(DESTDIR)$(gocdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gocdir)" && rm -f $$files || exit $$?; \
	echo " ( cd '$(DESTDIR)$(gocdir)' && rm -f" $$filesc ")"; \
	cd "$(DESTDIR)$(gocdir)" && rm -f $$filesc || exit $$?; \
	echo " ( cd '$(DESTDIR)$(gocdir)' && rm -f" $$fileso ")"; \
	cd "$(DESTDIR)$(gocdir)" && rm -f $$fileso
install-ioPYTHON: $(io_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(iodir)" || $(MKDIR_P) "$(DESTDIR)$(iodir)"
	@list='$(io_PYTHON)'; dlist=; list2=; test -n "$(iodir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(iodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(iodir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(iodir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(iodir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-ioPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(io_PYTHON)'; test -n "$(iodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	echo " ( cd '$(DESTDIR)$(iodir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(iodir)" && rm -f $$files || exit $$?; \
	echo " ( cd '$(DESTDIR)$(iodir)' && rm -f" $$filesc ")"; \
	cd "$(DESTDIR)$(iodir)" && rm -f $$filesc || exit $$?; \
	echo " ( cd '$(DESTDIR)$(iodir)' && rm -f" $$fileso ")"; \
	cd "$(DESTDIR)$(iodir)" && rm -f $$fileso
install-metaPYTHON: $(meta_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(metadir)" || $(MKDIR_P) "$(DESTDIR)$(metadir)"
	@list='$(meta_PYTHON)'; dlist=; list2=; test -n "$(metadir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(metadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(metadir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(metadir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(metadir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-metaPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(meta_PYTHON)'; test -n "$(metadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	echo " ( cd '$(DESTDIR)$(metadir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(metadir)" && rm -f $$files || exit $$?; \
	echo " ( cd '$(DESTDIR)$(metadir)' && rm -f" $$filesc ")"; \
	cd "$(DESTDIR)$(metadir)" && rm -f $$filesc || exit $$?; \
	echo " ( cd '$(DESTDIR)$(metadir)' && rm -f" $$fileso ")"; \
	cd "$(DESTDIR)$(metadir)" && rm -f $$fileso
install-valagenPYTHON: $(valagen_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(valagendir)" || $(MKDIR_P) "$(DESTDIR)$(valagendir)"
	@list='$(valagen_PYTHON)'; dlist=; list2=; test -n "$(valagendir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(valagendir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(valagendir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(valagendir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(valagendir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-valagenPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(valagen_PYTHON)'; test -n "$(valagendir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	echo " ( cd '$(DESTDIR)$(valagendir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(valagendir)" && rm -f $$files || exit $$?; \
	echo " ( cd '$(DESTDIR)$(valagendir)' && rm -f" $$filesc ")"; \
	cd "$(DESTDIR)$(valagendir)" && rm -f $$filesc || exit $$?; \
	echo " ( cd '$(DESTDIR)$(valagendir)' && rm -f" $$fileso ")"; \
	cd "$(DESTDIR)$(valagendir)" && rm -f $$fileso
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
	for dir in "$(DESTDIR)$(codegendir)" "$(DESTDIR)$(csharpgendir)" "$(DESTDIR)$(gobjectgendir)" "$(DESTDIR)$(gocdir)" "$(DESTDIR)$(iodir)" "$(DESTDIR)$(metadir)" "$(DESTDIR)$(valagendir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-codegenPYTHON install-csharpgenPYTHON \
	install-data-local install-gobjectgenPYTHON install-gocPYTHON \
	install-ioPYTHON install-metaPYTHON install-valagenPYTHON

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-codegenPYTHON uninstall-csharpgenPYTHON \
	uninstall-gobjectgenPYTHON uninstall-gocPYTHON \
	uninstall-ioPYTHON uninstall-metaPYTHON \
	uninstall-valagenPYTHON
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: install-am install-strip uninstall-am

.PHONY: all all-am check check-am clean clean-generic distclean \
	distclean-generic distdir dvi dvi-am html html-am info info-am \
	install install-am install-codegenPYTHON \
	install-csharpgenPYTHON install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-gobjectgenPYTHON install-gocPYTHON \
	install-html install-html-am install-info install-info-am \
	install-ioPYTHON install-man install-metaPYTHON install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-valagenPYTHON installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic pdf pdf-am ps ps-am uninstall uninstall-am \
	uninstall-codegenPYTHON uninstall-csharpgenPYTHON \
	uninstall-gobjectgenPYTHON uninstall-gocPYTHON uninstall-hook \
	uninstall-ioPYTHON uninstall-metaPYTHON \
	uninstall-valagenPYTHON


install-data-local:
	chmod +x create_config_module.sh
	./create_config_module.sh $(datarootdir)
	mkdir -p $(gocdir)
	mv config.py $(gocdir)

uninstall-hook:
	rm -rf $(pkgpythondir)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
