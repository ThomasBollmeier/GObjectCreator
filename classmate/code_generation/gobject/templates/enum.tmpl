/*
* This file was generated automatically.
* Please do not edit!
*/

#ifndef $ENUM_ABS_NAME$_H
#define $ENUM_ABS_NAME$_H

#include "glib-object.h"

G_BEGIN_DECLS

#! if not enum.isFlagType

typedef enum _$EnumAbsName$ {
#! for code in enum.codes
    #! if first
        #! if not last
        	#! if not code.valueGiven
    $ENUM_ABS_NAME$_$upper($$code.name$$)$,
    		#! else
    $ENUM_ABS_NAME$_$upper($$code.name$$)$ = $code.value$,
    		#! end
        #! else
        	#! if not code.valueGiven
    $ENUM_ABS_NAME$_$upper($$code.name$$)$
    		#! else
    $ENUM_ABS_NAME$_$upper($$code.name$$)$ = $code.value$
    		#! end
        #! end
    #! elif last
        #! if not code.valueGiven
    $ENUM_ABS_NAME$_$upper($$code.name$$)$
    	#! else
    $ENUM_ABS_NAME$_$upper($$code.name$$)$ = $code.value$
    	#! end
    #! else
        #! if not code.valueGiven
    $ENUM_ABS_NAME$_$upper($$code.name$$)$,
    	#! else
    $ENUM_ABS_NAME$_$upper($$code.name$$)$ = $code.value$,
    	#! end
    #! end
#! end
} $EnumAbsName$;

#! else

typedef guint $EnumAbsName$Flags;

enum {
#! for code in enum.codes
    #! if not last
    $ENUM_ABS_NAME$_$upper($$code.name$$)$ = 1 << $code.value$,
    #! else
    $ENUM_ABS_NAME$_$upper($$code.name$$)$ = 1 << $code.value$
    #! end
#! end
};

#! end

G_END_DECLS

#endif